# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './pythonGUI/zhuanhuan.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PIL import Image#导入Image库用与操作图片文件
import datetime

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Zhuanhuan(QtWidgets.QMainWindow):
      # 为了使类继承父类中的内容
    def __init__(self):
        super(Ui_Zhuanhuan,self).__init__()
        self.setupUi(self)
        self.retranslateUi(self)
    ###########
    def setupUi(self, zhuanhuan):
        zhuanhuan.setObjectName("zhuanhuan")
        zhuanhuan.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(zhuanhuan)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(20, 60, 761, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.label_output = QtWidgets.QLabel(self.centralwidget)
        self.label_output.setGeometry(QtCore.QRect(260, 300, 211, 71))
        self.label_output.setObjectName("label_output")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(270, -10, 241, 71))
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(310, 140, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(237, 230, 281, 23))
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        
        self.progressBar.setRange(0,40)
        self.progressBar.setValue(0)
        
        zhuanhuan.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(zhuanhuan)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        zhuanhuan.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(zhuanhuan)
        self.statusbar.setObjectName("statusbar")
        zhuanhuan.setStatusBar(self.statusbar)

        self.pushButton.clicked.connect(self.zhuanhuan)# 点击链接到tran方法

        self.retranslateUi(zhuanhuan)
        QtCore.QMetaObject.connectSlotsByName(zhuanhuan)

    def retranslateUi(self, zhuanhuan):
        _translate = QtCore.QCoreApplication.translate
        zhuanhuan.setWindowTitle(_translate("zhuanhuan", "MainWindow"))
        self.label_output.setText(_translate("zhuanhuan", "   "))
        self.label.setText(_translate("zhuanhuan", "请输入想要转换的图片的路径"))
        self.pushButton.setText(_translate("zhuanhuan", "转换"))
    
    # 实现功能
    def zhuanhuan(self):
        name = self.lineEdit.text() #input("Please Input Image File Name:")
        # print("Start")
        try:
            self.image_to_txt(name)
        except:
            self.label_output.setText("错误！")# print("Error!")
        # print("Over")
   
    # 实现功能
    def image_to_txt(self,imgpath):
        # global img
        #获取当前时间,转换成字符串
        timenow = datetime.datetime.now()
        timestr = timenow.strftime("%Y-%m-%d-%H-%M-%S")
        #生成的Txt文件用<原图片文件名+ 当前时间字符串+ ".txt"后缀>作为文件名
        namestr = "{0}-{1}.txt".format(imgpath, timestr)
        #打开或创建一个TxT文件文件
        txt = open(namestr, "w+")
        #打开图片文件文件
        print("Open Image File [{0}]".format(imgpath))
        try:
            img = Image.open(imgpath)
        except:
            print("Error to Open [{0}]!".format(imgpath))
        #判断图片文件的格式, 这里必须为"RGB"格式, 如果不是"RGB"格式, 
        #则用convert函数转换成"RGB"格式.
        if "RGB" == img.mode:
            print("Size{0},Format({1}),Color({2})".format(img.size, img.format, img.mode))
        else:
            print("Not a RGB image file!")
            img = img.convert("RGB")
            print("Convert to RGB Success!")
        #获取图片文件宽和高
        width = img.size[0]
        height = img.size[1]
        bei = 0
        #如果图片文件大于400*400像素,则对图片进行缩放,缩放比例依照宽度和高度中的最大值
        if width >= height:
            max = width
        else:
            max = height
        if max >= 400:
            bei = max / 400
            width = int(width / bei)
            height = int(height / bei)
            img = img.resize((width, height))
            print("Image Size too large, Resize to", img.size)
        #把图片文件转换成纯黑白的图片
        img = img.convert("1")
        index = 0
        print("Start Process!")
        for w in range(width):#遍历图片的宽度,[0, width)
            #显示进度
            index += 1
            if width == 400:
                self.progressBar.setValue(index/10)# print("#", end="")
            else:
                self.progressBar.setValue(index/(width / 40))# print("#", end="")
            txt.write("/")
            # if index >= 60:#大于60换行
            #     index = 0
            #     print("")
            for h in range(height):#遍历图片的高度[0, height)
                xiangsu = img.getpixel((w, h))#获取图片当前坐标点的像素值
                #print("w=", w, "h=", h, "xiangsu=", xiangsu)
                if xiangsu != 0:#因为是纯黑白图像,所以像素颜色只有0或255两种值
                    txt.write("_")#非0则往txt中写入"_"表示白色
                    #print("w=", w, "h=", h, "xiangsu=", xiangsu)
                else:
                    txt.write("*")#0则往txt中写入"*"表示黑色
                    #print("w=", w, "h=", h, "xiangsu=", xiangsu)
            txt.write("/")
            txt.write("\n")
        #保存新生成的TXT文件
        self.label_output.setText("转换完成")#print("\nProcess Done!")
        self.lineEdit.setText("txt存储路径为 [{0}]".format(namestr))
        #print("Save File As [{0}]".format(namestr))
        txt.close()
        # print("Save Done!")
    

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    zhuanhuan = QtWidgets.QMainWindow()
    ui = Ui_Zhuanhuan()
    ui.setupUi(zhuanhuan)
    zhuanhuan.show()
    sys.exit(app.exec_())
